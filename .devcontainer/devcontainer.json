// For format details, see https://aka.ms/devcontainer.json. For config options, see the README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.158.0/containers/docker-from-docker-compose
{
	"name": "CinarDockerDev",
	"dockerComposeFile": "docker-compose.dev.yml",
	"service": "pcf",
	"workspaceFolder": "/Source/",
	// "shutdownAction": "stopCompose",
	"runArgs": [
		"pcf"
	],
	// Use this environment variable if you need to bind mount your local source code into a new container.
	"remoteEnv": {
		"LOCAL_WORKSPACE_FOLDER": "${localWorkspaceFolder}",
	},
	// .env dosyasını otomatik olarak uygula
	// "initializeCommand": "set localSourceFolder=${LOCAL_WORKSPACE_FOLDER}; set remoteSourceFolder=${workspaceFolder}",
	// Set *default* container specific settings.json values on container create.
	"settings": {
		// "terminal.integrated.shell.linux": "/bin/bash"		
        "extensions.autoUpdate": "false",
		"remote.downloadExtensionsLocally": true
	},
	//  "postCreateCommand": "bash ./.devcontainer/library-scripts/merhaba-dunya.sh",
	// Add the IDs of extensions you want installed when the container is created.
	"extensions": [
		"ms-vscode.cpptools@1.6.0"
	],
	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	// "forwardPorts": [],
	// Use 'postCreateCommand' to run commands after the container is created.
	// "postCreateCommand": "docker --version",
	// Comment out connect as root instead. More info: https://aka.ms/vscode-remote/containers/non-root.
	"remoteUser": "root"
}